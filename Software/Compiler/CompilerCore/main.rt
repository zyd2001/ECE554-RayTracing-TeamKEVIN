
void main(int id, int stackBase)
{
    float *result;
    result = stackBase + 65520;

    int width = 160;
    int height = 90;
    float fov = 60;
    float scale = 0.57735;
    float imageAspectRatio = 1.6;
    vector orig = [ 0, 0, 2, 0 ];
    int div = id / width;
    // compute primary ray
    float x = (2 * (id - div + 0.5) / width - 1) * imageAspectRatio * scale;
    float y = (1 - 2 * (div + 0.5) / height) * scale;
    vector dir = [ x, y, -1, 0 ];
    dir = normalize(dir);
    vector hit, normal;
    hit, normal = trace(orig, dir);
    if (asInt(hit[3]) != 0)
    {
        hit[3] = 0;
        float d = norm(hit);
        result[0] = d;
        result[1] = d;
        result[2] = d;
        result[3] = id;
    }
    else
    {
        result[0] = -1.0;
        result[1] = -1.0;
        result[2] = -1.0;
        result[3] = id;
    }
    return;
}

vector normalize(vector v)
{
    float temp0 = v[0], temp1 = v[1], temp2 = v[2], temp3 = v[3];
    float norm = sqrt(temp0 * temp0 + temp1 * temp1 + temp2 * temp2 + temp3 * temp3);
    return v / norm;
}

float norm(vector v)
{
    float temp0 = v[0], temp1 = v[1], temp2 = v[2], temp3 = v[3];
    return sqrt(temp0 * temp0 + temp1 * temp1 + temp2 * temp2 + temp3 * temp3);
}