s_load_4byte r r i
101100 5 5 16
s_store_4byte r r i
111100 5 5 16
s_write_high r x ui
100000 5 5 16
s_write_low r x ui
100001 5 5 16
s_get_from_v r x r x ui
100101 5 1 4 14 2
v_load_16byte x r r i
101111 1 4 5 16
v_store_16byte x r r i
111111 1 4 5 16
v_get_from_s r x r x ui
100111 5 1 4 14 2
vv_add x r x r x r x
000000 1 4 1 4 1 4 11
vv_sub x r x r x r x
000001 1 4 1 4 1 4 11
vv_mul_ele x r x r x r x
000010 1 4 1 4 1 4 11
vv_div x r x r x r x
000011 1 4 1 4 1 4 11
v_reduce r x r x
100100 5 1 4 16
s_sqrt r r x
100110 5 5 16
vf_add x r x r r x
001000 1 4 1 4 5 11
vf_sub x r x r r x
001001 1 4 1 4 5 11
vf_mul x r x r r x
001010 1 4 1 4 5 11
vf_div x r x r r x
001011 1 4 1 4 5 11
ii_add r r r x
011000 5 5 5 11
ii_sub r r r x
011001 5 5 5 11
ii_mul r r r x
011010 5 5 5 11
ii_div r r r x
011011 5 5 5 11
ff_add r r r x
010000 5 5 5 11
ff_sub r r r x
010001 5 5 5 11
ff_mul r r r x
010010 5 5 5 11
ff_div r r r x
010011 5 5 5 11
ii_addi r r i
101000 5 5 16
ii_subi r r i
101001 5 5 16
ii_muli r r i
101010 5 5 16
ii_divi r r i
101011 5 5 16
not r r x
001100 5 5 16
and r r r x
001101 5 5 5 11
or r r r x
001110 5 5 5 11
xor r r r x
001111 5 5 5 11
trace x
111010 26
s_itof r r x
100010 5 5 16
s_ftoi r r x
100011 5 5 16
cmp_v x r x r x
000101 6 4 1 4 11
cmp_i x r r x
011101 5 5 5 11
cmp_f x r r x
010101 5 5 5 11
be x l
110000 10 16
bne x l
110001 10 16
bl x l
110010 10 16
bge x l
110011 10 16
bg x l
110100 10 16
ble x l
110101 10 16
real_jmp x i
110110 10 16
ret x
110111 26
fin x
111011 26
jmp l
# real_jmp $l
jmp_link l
# ii_addi R30 R31 4, real_jmp $l
ii_mod r r r
# ii_div $r0 $r1 $r2, ii_mul $r0 $r0 $r2, ii_sub $r0 $r1 $r0
ii_modi r r i
# ii_divi $r0 $r1 $i, ii_muli $r0 $r0 $i, ii_sub $r0 $r1 $r0
s_pop r
# ii_addi R29 R29 -4, s_load_4byte $r0 R29 0
s_push r
# s_store_4byte $r0 R29 0, ii_addi R29 R29 4
v_pop r
# ii_addi R29 R29 -16, v_load_16byte $r0 R29 0
v_push r
# v_store_4byte $r0 R29 0, ii_addi R29 R29 16
v_get_from_s_d r r i
# v_get_from_s $r0 $r1 $i
s_setzero r
# xor $r0 $r0 $r0
